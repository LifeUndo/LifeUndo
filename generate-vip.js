const crypto = require('crypto');
const fs = require('fs');

// –°–æ–∑–¥–∞–µ–º VIP –ª–∏—Ü–µ–Ω–∑–∏—é –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
const payload = {
  plan: "VIP",
  email: "owner@lifeundo.ru", 
  seats: 999999,
  expires: null, // –±–µ—Å—Å—Ä–æ—á–Ω–æ
  scope: "unlimited",
  issued: new Date().toISOString()
};

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—É—é –ø–∞—Ä—É
const { publicKey, privateKey } = crypto.generateKeyPairSync('ec', {
  namedCurve: 'prime256v1'
});

// –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º
const sign = crypto.createSign('sha256');
sign.update(JSON.stringify(payload));
sign.end();
const signature = sign.sign(privateKey);

// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64url
const b64url = b => b.toString("base64").replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");

// –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é
const lic = { ...payload, sig: b64url(signature) };

// –°–æ—Ö—Ä–∞–Ω—è–µ–º
fs.writeFileSync("owner-vip.lifelic", JSON.stringify(lic, null, 2), "utf8");
console.log("‚úì owner-vip.lifelic –≥–æ—Ç–æ–≤");

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ PEM —Ñ–æ—Ä–º–∞—Ç–µ
const publicPem = publicKey.export({ type: 'spki', format: 'pem' });
fs.writeFileSync("public.pem", publicPem, "utf8");
console.log("‚úì public.pem —Å–æ–∑–¥–∞–Ω");

console.log("\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ owner-vip.lifelic:");
console.log(JSON.stringify(lic, null, 2));















