# –¢–µ—Å—Ç refund/–ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-—ç–Ω–¥–ø–æ–∏–Ω—Ç
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\test-refund-resend.ps1 <https://project.vercel.app> <ADMIN_TOKEN> <ORDER_ID>

param(
    [Parameter(Mandatory=$true)][string]$Base,
    [Parameter(Mandatory=$true)][string]$AdminToken,
    [Parameter(Mandatory=$true)][string]$OrderId
)

Write-Host "üß™ –¢–µ—Å—Ç refund/–ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏" -ForegroundColor Cyan
Write-Host "üîó URL: $Base/api/admin/orders" -ForegroundColor Yellow
Write-Host "üìã Order ID: $OrderId" -ForegroundColor Yellow
Write-Host ""

# –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞
Write-Host "1Ô∏è‚É£ –¢–µ—Å—Ç: –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞" -ForegroundColor Green
try {
    $searchResponse = Invoke-RestMethod -Method Get -Uri "$Base/api/admin/orders?order_id=$OrderId" -Headers @{"Authorization"="Bearer $AdminToken"}
    
    if ($searchResponse.found) {
        Write-Host "‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
        Write-Host "   Order ID: $($searchResponse.order.order_id)" -ForegroundColor Gray
        Write-Host "   Email: $($searchResponse.order.email)" -ForegroundColor Gray
        Write-Host "   Plan: $($searchResponse.order.plan)" -ForegroundColor Gray
        Write-Host "   Amount: $($searchResponse.order.amount)" -ForegroundColor Gray
        Write-Host "   Status: $($searchResponse.order.status)" -ForegroundColor Gray
    } else {
        Write-Host "‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Order ID: $OrderId" -ForegroundColor Gray
        return
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–∞: $($_.Exception.Message)" -ForegroundColor Red
    return
}

Write-Host ""

# –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª—é—á–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏
Write-Host "2Ô∏è‚É£ –¢–µ—Å—Ç: –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª—é—á–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏" -ForegroundColor Green
try {
    $resendBody = @{
        order_id = $OrderId
        action = "resend_license"
    } | ConvertTo-Json
    
    $resendResponse = Invoke-RestMethod -Method Post -Uri "$Base/api/admin/orders" -ContentType "application/json" -Body $resendBody -Headers @{"Authorization"="Bearer $AdminToken"}
    
    Write-Host "‚úÖ –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª—é—á–∞ —É—Å–ø–µ—à–Ω–∞" -ForegroundColor Green
    Write-Host "   –†–µ–∑—É–ª—å—Ç–∞—Ç: $($resendResponse.message)" -ForegroundColor Gray
    Write-Host "   Order ID: $($resendResponse.order_id)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∏: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""

# –¢–µ—Å—Ç 3: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ (–∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å)
Write-Host "3Ô∏è‚É£ –¢–µ—Å—Ç: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ (–∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å)" -ForegroundColor Green
try {
    $resendBody2 = @{
        order_id = $OrderId
        action = "resend_license"
    } | ConvertTo-Json
    
    $resendResponse2 = Invoke-RestMethod -Method Post -Uri "$Base/api/admin/orders" -ContentType "application/json" -Body $resendBody2 -Headers @{"Authorization"="Bearer $AdminToken"}
    
    Write-Host "‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    Write-Host "   –†–µ–∑—É–ª—å—Ç–∞—Ç: $($resendResponse2.message)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∏: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""

# –¢–µ—Å—Ç 4: –ù–µ–≤–µ—Ä–Ω—ã–π action
Write-Host "4Ô∏è‚É£ –¢–µ—Å—Ç: –ù–µ–≤–µ—Ä–Ω—ã–π action" -ForegroundColor Green
try {
    $invalidBody = @{
        order_id = $OrderId
        action = "invalid_action"
    } | ConvertTo-Json
    
    $invalidResponse = Invoke-RestMethod -Method Post -Uri "$Base/api/admin/orders" -ContentType "application/json" -Body $invalidBody -Headers @{"Authorization"="Bearer $AdminToken"}
    Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π action –ø—Ä–æ—à—ë–ª (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode -eq 400) {
        Write-Host "‚úÖ –ù–µ–≤–µ—Ä–Ω—ã–π action –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (400 Bad Request)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Yellow
    }
}

Write-Host ""

# –¢–µ—Å—Ç 5: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø
Write-Host "5Ô∏è‚É£ –¢–µ—Å—Ç: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø" -ForegroundColor Green
try {
    $unauthResponse = Invoke-RestMethod -Method Get -Uri "$Base/api/admin/orders?order_id=$OrderId"
    Write-Host "‚ùå –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø—Ä–æ—à—ë–ª (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode -eq 401) {
        Write-Host "‚úÖ –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (401 Unauthorized)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Yellow
    }
}

Write-Host ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:" -ForegroundColor Cyan
Write-Host "‚úÖ –ê–¥–º–∏–Ω-—ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
Write-Host "‚úÖ –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
Write-Host "‚úÖ –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª—é—á–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
Write-Host "‚úÖ –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
Write-Host "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
Write-Host ""
Write-Host "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Vercel –Ω–∞ [ADMIN][resend_license]" -ForegroundColor Yellow
Write-Host "üéØ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!" -ForegroundColor Green
