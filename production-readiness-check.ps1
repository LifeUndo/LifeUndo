# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\production-readiness-check.ps1 <https://project.vercel.app> <ADMIN_TOKEN>

param(
    [Parameter(Mandatory=$true)][string]$Base,
    [Parameter(Mandatory=$true)][string]$AdminToken
)

Write-Host "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É" -ForegroundColor Cyan
Write-Host "üîó URL: $Base" -ForegroundColor Yellow
Write-Host ""

$allTestsPassed = $true

# –¢–µ—Å—Ç 1: Create endpoint
Write-Host "1Ô∏è‚É£ –¢–µ—Å—Ç: Create endpoint" -ForegroundColor Green
try {
    $createResponse = Invoke-RestMethod -Uri "$Base/api/fk/create" -Method POST -ContentType "application/json" -Headers @{"Origin"="https://lifeundo.ru"} -Body '{"email":"test@example.com","plan":"vip_lifetime","locale":"ru"}'
    
    if ($createResponse.url -and $createResponse.order_id) {
        Write-Host "‚úÖ Create endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
        Write-Host "   Order ID: $($createResponse.order_id)" -ForegroundColor Gray
        Write-Host "   URL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $($createResponse.url.Substring(0, [Math]::Min(50, $createResponse.url.Length)))..." -ForegroundColor Gray
    } else {
        Write-Host "‚ùå Create endpoint –Ω–µ –≤–µ—Ä–Ω—É–ª –æ–∂–∏–¥–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Red
        $allTestsPassed = $false
    }
} catch {
    Write-Host "‚ùå Create endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
    $allTestsPassed = $false
}

Write-Host ""

# –¢–µ—Å—Ç 2: Notify OPTIONS (CORS)
Write-Host "2Ô∏è‚É£ –¢–µ—Å—Ç: Notify OPTIONS (CORS)" -ForegroundColor Green
try {
    $notifyResponse = Invoke-WebRequest -Uri "$Base/api/fk/notify" -Method OPTIONS -Headers @{"Origin"="https://lifeundo.ru"}
    
    if ($notifyResponse.StatusCode -eq 204) {
        Write-Host "‚úÖ Notify OPTIONS —Ä–∞–±–æ—Ç–∞–µ—Ç (CORS)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Notify OPTIONS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: $($notifyResponse.StatusCode)" -ForegroundColor Red
        $allTestsPassed = $false
    }
} catch {
    Write-Host "‚ùå Notify OPTIONS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
    $allTestsPassed = $false
}

Write-Host ""

# –¢–µ—Å—Ç 3: –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
Write-Host "3Ô∏è‚É£ –¢–µ—Å—Ç: –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" -ForegroundColor Green
try {
    $adminResponse = Invoke-RestMethod -Method Get -Uri "$Base/api/admin/orders?order_id=test" -Headers @{"Authorization"="Bearer $AdminToken"}
    
    if ($adminResponse.found) {
        Write-Host "‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –æ–∂–∏–¥–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Red
        $allTestsPassed = $false
    }
} catch {
    Write-Host "‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: $($_.Exception.Message)" -ForegroundColor Red
    $allTestsPassed = $false
}

Write-Host ""

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π Vercel
Write-Host "4Ô∏è‚É£ –¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π Vercel" -ForegroundColor Green
Write-Host "   –û—Ç–∫—Ä–æ–π—Ç–µ: $Base/_vercel/functions" -ForegroundColor Gray
Write-Host "   –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã: api/fk/create, api/fk/notify, api/admin/orders" -ForegroundColor Gray

Write-Host ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:" -ForegroundColor Cyan
if ($allTestsPassed) {
    Write-Host "‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò - –ì–û–¢–û–í –ö –ü–†–û–î–ê–ö–®–ï–ù–£!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
    Write-Host "1. –†–æ—Ç–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ FreeKassa" -ForegroundColor Gray
    Write-Host "2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ENV –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ Vercel" -ForegroundColor Gray
    Write-Host "3. Redeploy Production" -ForegroundColor Gray
    Write-Host "4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Notify URL –≤ –∫–∞–±–∏–Ω–µ—Ç–µ FK" -ForegroundColor Gray
    Write-Host "5. –¢–µ—Å—Ç '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å' –≤ –∫–∞–±–∏–Ω–µ—Ç–µ FK" -ForegroundColor Gray
    Write-Host "6. –ñ–∏–≤–∞—è –æ–ø–ª–∞—Ç–∞ –Ω–∞ iPhone" -ForegroundColor Gray
} else {
    Write-Host "‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ - –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:" -ForegroundColor Yellow
    Write-Host "- ENV –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel" -ForegroundColor Gray
    Write-Host "- Redeploy Production" -ForegroundColor Gray
    Write-Host "- –õ–æ–≥–∏ Vercel –Ω–∞ –æ—à–∏–±–∫–∏" -ForegroundColor Gray
    Write-Host "- –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üìä –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:" -ForegroundColor Cyan
Write-Host ".\smoke-test-freekassa.ps1 $Base" -ForegroundColor Gray
Write-Host ".\fk-notify-sim.ps1 $Base MERCHANT_ID 2490.00 LU-test-123 SECRET2" -ForegroundColor Gray
Write-Host ".\test-admin.ps1 $Base $AdminToken" -ForegroundColor Gray
