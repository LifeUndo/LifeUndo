# post-fix-check.ps1
# –ü—Ä–æ—Å—Ç–æ–π curl-—á–µ–∫ 200/401

param(
    [Parameter(Mandatory=$true)]
    [string]$Url
)

Write-Host "üß™ –ó–∞–ø—É—Å–∫ HTTP –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è $Url" -ForegroundColor Cyan

$pages = @(
    @{ path = "/"; expected = 200; name = "–ì–ª–∞–≤–Ω–∞—è" },
    @{ path = "/fund"; expected = 200; name = "–§–æ–Ω–¥" },
    @{ path = "/ok"; expected = 200; name = "–ú–∞—Ä–∫–µ—Ä" },
    @{ path = "/admin"; expected = 401; name = "–ê–¥–º–∏–Ω–∫–∞" }
)

foreach ($page in $pages) {
    $testUrl = "$Url$($page.path)"
    Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ $($page.name) ($testUrl)..." -NoNewline -ForegroundColor Green
    
    try {
        $response = Invoke-WebRequest -Uri $testUrl -Method HEAD -MaximumRedirection 0 -ErrorAction Stop
        if ($response.StatusCode -eq $page.expected) {
            Write-Host " ‚úÖ $($response.StatusCode) OK" -ForegroundColor Green
        } else {
            Write-Host " ‚ùå –û—à–∏–±–∫–∞: $($response.StatusCode) (–æ–∂–∏–¥–∞–ª—Å—è $($page.expected))" -ForegroundColor Red
        }
    } catch {
        Write-Host " ‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
}

Write-Host "‚úÖ HTTP –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞." -ForegroundColor Green