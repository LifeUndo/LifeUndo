# Email Pause Smoke Test
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: SMTP ‚Üí HOLD ‚Üí APPROVE ‚Üí SENT

Write-Host "Email Pause Smoke Test" -ForegroundColor Green
Write-Host "======================" -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL
function Test-Endpoint {
    param(
        [string]$Uri,
        [string]$Method = "GET",
        [hashtable]$Headers = @{},
        [string]$Body = $null
    )
    
    try {
        $params = @{
            Uri = $Uri
            Method = $Method
            Headers = $Headers
            TimeoutSec = 10
            UseBasicParsing = $true
        }
        
        if ($Body) {
            $params.Body = $Body
        }
        
        $response = Invoke-RestMethod @params -ErrorAction Stop
        return @{
            Success = $true
            Data = $response
        }
    }
    catch {
        return @{
            Success = $false
            Error = $_.Exception.Message
        }
    }
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP Listener (–ø–æ—Ä—Ç 2525)
Write-Host "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP Listener (–ø–æ—Ä—Ç 2525)..." -ForegroundColor Yellow
try {
    $tcpClient = New-Object System.Net.Sockets.TcpClient
    $tcpClient.Connect("localhost", 2525)
    if ($tcpClient.Connected) {
        Write-Host "   ‚úÖ SMTP Listener —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 2525" -ForegroundColor Green
        $tcpClient.Close()
    } else {
        Write-Host "   ‚ùå SMTP Listener –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 2525" -ForegroundColor Red
    }
}
catch {
    Write-Host "   ‚ùå SMTP Listener –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Email Pause API endpoints
Write-Host "`n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Email Pause API endpoints..." -ForegroundColor Yellow

# –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
$headers = @{
    "Authorization" = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("admin:password"))
    "Content-Type" = "application/json"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–∏—Å–µ–º
$listResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/email" -Headers $headers
if ($listResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/email - OK" -ForegroundColor Green
    $emails = $listResult.Data
    Write-Host "   üìß –ù–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º: $($emails.Count)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/admin/email - Error: $($listResult.Error)" -ForegroundColor Red
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Email Rules
Write-Host "`n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Email Rules..." -ForegroundColor Yellow
$rulesResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/email/rules" -Headers $headers
if ($rulesResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/email/rules - OK" -ForegroundColor Green
    $rules = $rulesResult.Data
    Write-Host "   üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª: $($rules.Count)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/admin/email/rules - Error: $($rulesResult.Error)" -ForegroundColor Red
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ System Health
Write-Host "`n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ System Health..." -ForegroundColor Yellow
$healthResult = Test-Endpoint -Uri "https://getlifeundo.com/api/_health/smtp" -Headers $headers
if ($healthResult.Success) {
    Write-Host "   ‚úÖ GET /api/_health/smtp - OK" -ForegroundColor Green
    $health = $healthResult.Data
    Write-Host "   üîç SMTP Health: $($health.status)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/_health/smtp - Error: $($healthResult.Error)" -ForegroundColor Red
}

# 5. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
Write-Host "`n5. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Yellow
Write-Host "   üìß –û—Ç–ø—Ä–∞–≤—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –Ω–∞ SMTP :2525:" -ForegroundColor White
Write-Host "      swaks --to test@example.com --from sender@example.com --server localhost:2525" -ForegroundColor Gray
Write-Host "   üîç –ü—Ä–æ–≤–µ—Ä—å –≤ –∞–¥–º–∏–Ω–∫–µ: /admin/email" -ForegroundColor White
Write-Host "   ‚úÖ –û–¥–æ–±—Ä–∏ –ø–∏—Å—å–º–æ: POST /api/admin/email/<id>/approve" -ForegroundColor White
Write-Host "   üìä –ü—Ä–æ–≤–µ—Ä—å relay-log: GET /api/admin/email/<id>/relay-log" -ForegroundColor White

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Billing API (—Å–≤—è–∑–∞–Ω–Ω—ã–µ endpoints)
Write-Host "`n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Billing API..." -ForegroundColor Yellow
$billingResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/subscription" -Headers $headers
if ($billingResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/subscription - OK" -ForegroundColor Green
    $subscription = $billingResult.Data
    Write-Host "   üí≥ –ü–ª–∞–Ω: $($subscription.plan.name)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/admin/subscription - Error: $($billingResult.Error)" -ForegroundColor Red
}

Write-Host "`nüéØ Smoke Test –∑–∞–≤–µ—Ä—à—ë–Ω!" -ForegroundColor Green
Write-Host "–ï—Å–ª–∏ –≤—Å–µ –ø—É–Ω–∫—Ç—ã –∑–µ–ª—ë–Ω—ã–µ - Email Pause –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Green

