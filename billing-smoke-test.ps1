# Billing API Smoke Test
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö billing endpoints –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–π

Write-Host "Billing API Smoke Test" -ForegroundColor Green
Write-Host "=====================" -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL
function Test-Endpoint {
    param(
        [string]$Uri,
        [string]$Method = "GET",
        [hashtable]$Headers = @{},
        [string]$Body = $null
    )
    
    try {
        $params = @{
            Uri = $Uri
            Method = $Method
            Headers = $Headers
            TimeoutSec = 10
            UseBasicParsing = $true
        }
        
        if ($Body) {
            $params.Body = $Body
        }
        
        $response = Invoke-RestMethod @params -ErrorAction Stop
        return @{
            Success = $true
            Data = $response
        }
    }
    catch {
        return @{
            Success = $false
            Error = $_.Exception.Message
        }
    }
}

# –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
$headers = @{
    "Authorization" = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("admin:password"))
    "Content-Type" = "application/json"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞–Ω–æ–≤
Write-Host "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞–Ω–æ–≤..." -ForegroundColor Yellow
$plansResult = Test-Endpoint -Uri "https://getlifeundo.com/api/billing/plans" -Headers $headers
if ($plansResult.Success) {
    Write-Host "   ‚úÖ GET /api/billing/plans - OK" -ForegroundColor Green
    $plans = $plansResult.Data
    Write-Host "   üìã –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞–Ω–æ–≤: $($plans.Count)" -ForegroundColor Cyan
    foreach ($plan in $plans) {
        Write-Host "      - $($plan.name): $($plan.price_cents)¬¢/$($plan.billing_cycle)" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ùå GET /api/billing/plans - Error: $($plansResult.Error)" -ForegroundColor Red
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
Write-Host "`n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏..." -ForegroundColor Yellow
$subscriptionResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/subscription" -Headers $headers
if ($subscriptionResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/subscription - OK" -ForegroundColor Green
    $subscription = $subscriptionResult.Data
    Write-Host "   üí≥ –ü–ª–∞–Ω: $($subscription.plan.name)" -ForegroundColor Cyan
    Write-Host "   üìÖ –ü–µ—Ä–∏–æ–¥: $($subscription.current_period_start) - $($subscription.current_period_end)" -ForegroundColor Cyan
    Write-Host "   üìä –°—Ç–∞—Ç—É—Å: $($subscription.status)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/admin/subscription - Error: $($subscriptionResult.Error)" -ForegroundColor Red
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–æ—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
Write-Host "`n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–æ—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
$quotasResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/quotas/usage" -Headers $headers
if ($quotasResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/quotas/usage - OK" -ForegroundColor Green
    $quotas = $quotasResult.Data
    Write-Host "   üìä –ö–≤–æ—Ç—ã:" -ForegroundColor Cyan
    foreach ($quota in $quotas) {
        $usage = $quota.usage
        $limit = $quota.limit
        $percent = if ($limit -gt 0) { [math]::Round(($usage / $limit) * 100, 1) } else { 0 }
        Write-Host "      - $($quota.name): $usage/$limit ($percent%)" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ùå GET /api/admin/quotas/usage - Error: $($quotasResult.Error)" -ForegroundColor Red
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤
Write-Host "`n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤..." -ForegroundColor Yellow
$limitsResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/limits" -Headers $headers
if ($limitsResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/limits - OK" -ForegroundColor Green
    $limits = $limitsResult.Data
    Write-Host "   üö® –õ–∏–º–∏—Ç—ã:" -ForegroundColor Cyan
    foreach ($limit in $limits) {
        $status = if ($limit.is_over_limit) { "üî¥ OVER" } else { "üü¢ OK" }
        Write-Host "      - $($limit.name): $status" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ùå GET /api/admin/limits - Error: $($limitsResult.Error)" -ForegroundColor Red
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–æ–π—Å–æ–≤
Write-Host "`n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–æ–π—Å–æ–≤..." -ForegroundColor Yellow
$invoicesResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/invoices" -Headers $headers
if ($invoicesResult.Success) {
    Write-Host "   ‚úÖ GET /api/admin/invoices - OK" -ForegroundColor Green
    $invoices = $invoicesResult.Data
    Write-Host "   üìÑ –ù–∞–π–¥–µ–Ω–æ –∏–Ω–≤–æ–π—Å–æ–≤: $($invoices.Count)" -ForegroundColor Cyan
    foreach ($invoice in $invoices) {
        Write-Host "      - #$($invoice.number): $($invoice.total_cents)¬¢ ($($invoice.status))" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ùå GET /api/admin/invoices - Error: $($invoicesResult.Error)" -ForegroundColor Red
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ–Ω—ã –ø–ª–∞–Ω–∞ (—Ç–µ—Å—Ç)
Write-Host "`n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ–Ω—ã –ø–ª–∞–Ω–∞..." -ForegroundColor Yellow
$changePlanBody = @{
    plan_code = "PRO"
} | ConvertTo-Json

$changeResult = Test-Endpoint -Uri "https://getlifeundo.com/api/admin/subscription/change" -Method "POST" -Headers $headers -Body $changePlanBody
if ($changeResult.Success) {
    Write-Host "   ‚úÖ POST /api/admin/subscription/change - OK" -ForegroundColor Green
    $result = $changeResult.Data
    Write-Host "   üîÑ –ü–ª–∞–Ω –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: $($result.plan.name)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå POST /api/admin/subscription/change - Error: $($changeResult.Error)" -ForegroundColor Red
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ System Health
Write-Host "`n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ System Health..." -ForegroundColor Yellow
$healthResult = Test-Endpoint -Uri "https://getlifeundo.com/api/_health/dns-ssl" -Headers $headers
if ($healthResult.Success) {
    Write-Host "   ‚úÖ GET /api/_health/dns-ssl - OK" -ForegroundColor Green
    $health = $healthResult.Data
    Write-Host "   üåê DNS/SSL Health: $($health.status)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/_health/dns-ssl - Error: $($healthResult.Error)" -ForegroundColor Red
}

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ FreeKassa
Write-Host "`n8. –ü—Ä–æ–≤–µ—Ä–∫–∞ FreeKassa..." -ForegroundColor Yellow
$fkResult = Test-Endpoint -Uri "https://getlifeundo.com/api/_health/freekassa" -Headers $headers
if ($fkResult.Success) {
    Write-Host "   ‚úÖ GET /api/_health/freekassa - OK" -ForegroundColor Green
    $fk = $fkResult.Data
    Write-Host "   üí≥ FreeKassa Health: $($fk.status)" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ùå GET /api/_health/freekassa - Error: $($fkResult.Error)" -ForegroundColor Red
}

Write-Host "`nüéØ Billing Smoke Test –∑–∞–≤–µ—Ä—à—ë–Ω!" -ForegroundColor Green
Write-Host "–ï—Å–ª–∏ –≤—Å–µ –ø—É–Ω–∫—Ç—ã –∑–µ–ª—ë–Ω—ã–µ - Billing —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Green

