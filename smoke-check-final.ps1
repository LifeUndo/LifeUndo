# PowerShell script –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã

Write-Host "üöÄ GLU Infra Status Sweep - Final Check" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green

# 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –∏ SSL
Write-Host "`nüì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –∏ SSL..." -ForegroundColor Blue

Write-Host "getlifeundo.com:" -ForegroundColor Yellow
try {
    $response1 = Invoke-WebRequest -Uri "https://getlifeundo.com/" -Method Head -TimeoutSec 10 -UseBasicParsing
    Write-Host "‚úÖ HTTPS: $($response1.StatusCode) $($response1.StatusDescription)" -ForegroundColor Green
    Write-Host "   Server: $($response1.Headers.Server)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå HTTPS Error: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nlifeundo.ru:" -ForegroundColor Yellow
try {
    $response2 = Invoke-WebRequest -Uri "https://lifeundo.ru/" -Method Head -TimeoutSec 10 -UseBasicParsing
    Write-Host "‚úÖ HTTPS: $($response2.StatusCode) $($response2.StatusDescription)" -ForegroundColor Green
    Write-Host "   Server: $($response2.Headers.Server)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå HTTPS Error: $($_.Exception.Message)" -ForegroundColor Red
}

# 2) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
Write-Host "`nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü..." -ForegroundColor Blue

$pages = @("/fund", "/gov", "/edu")
foreach ($page in $pages) {
    Write-Host "getlifeundo.com$page:" -ForegroundColor Yellow
    try {
        $response = Invoke-WebRequest -Uri "https://getlifeundo.com$page" -Method Head -TimeoutSec 10 -UseBasicParsing
        Write-Host "‚úÖ Status: $($response.StatusCode)" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
Write-Host "`nüîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..." -ForegroundColor Blue

# –ë–∞–∑–æ–≤—ã–µ endpoints
$endpoints = @(
    "/api/_health",
    "/api/billing/plans",
    "/api/admin/subscription",
    "/api/admin/quotas/usage"
)

foreach ($endpoint in $endpoints) {
    Write-Host "getlifeundo.com${endpoint}:" -ForegroundColor Yellow
    try {
        $response = Invoke-WebRequest -Uri "https://getlifeundo.com$endpoint" -Method Get -TimeoutSec 10 -UseBasicParsing
        Write-Host "‚úÖ Status: $($response.StatusCode)" -ForegroundColor Green
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Write-Host "‚ö†Ô∏è  Status: $statusCode (expected for auth endpoints)" -ForegroundColor Yellow
    }
}

# 4) DNS –ø—Ä–æ–≤–µ—Ä–∫–∞
Write-Host "`nüåê DNS –ø—Ä–æ–≤–µ—Ä–∫–∞..." -ForegroundColor Blue

Write-Host "getlifeundo.com DNS:" -ForegroundColor Yellow
try {
    $dns1 = nslookup getlifeundo.com 8.8.8.8
    Write-Host "‚úÖ DNS resolved" -ForegroundColor Green
    if ($dns1 -match "Address:\s+(\d+\.\d+\.\d+\.\d+)") {
        $ip = $matches[1]
        Write-Host "   IP: $ip" -ForegroundColor Gray
        if ($ip -eq "76.76.21.21") {
            Write-Host "   ‚úÖ Correct Vercel IP" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö†Ô∏è  Should be 76.76.21.21 (Vercel)" -ForegroundColor Yellow
        }
    }
} catch {
    Write-Host "‚ùå DNS Error: $($_.Exception.Message)" -ForegroundColor Red
}

# 5) GitHub —Ç—ç–≥–∏
Write-Host "`nüìã GitHub —Ç—ç–≥–∏..." -ForegroundColor Blue
try {
    $tags = git tag --list | Sort-Object -Descending
    Write-Host "‚úÖ Local tags:" -ForegroundColor Green
    foreach ($tag in $tags) {
        Write-Host "   $tag" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Git Error: $($_.Exception.Message)" -ForegroundColor Red
}

# 6) –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å
Write-Host "`nüóÑÔ∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å..." -ForegroundColor Blue
if ($env:DATABASE_URL) {
    Write-Host "‚úÖ DATABASE_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    Write-Host "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\apply-migrations.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ DATABASE_URL –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏" -ForegroundColor Yellow
}

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
Write-Host "`nüéØ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:" -ForegroundColor Green
Write-Host "=================" -ForegroundColor Green

$issues = @()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
try {
    $healthCheck = Invoke-WebRequest -Uri "https://getlifeundo.com/" -Method Head -TimeoutSec 5 -UseBasicParsing
    if ($healthCheck.StatusCode -ne 200) {
        $issues += "getlifeundo.com –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç $($healthCheck.StatusCode)"
    }
} catch {
    $issues += "getlifeundo.com –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)"
}

if (-not $env:DATABASE_URL) {
    $issues += "DATABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

if ($issues.Count -eq 0) {
    Write-Host "üü¢ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢!" -ForegroundColor Green
    Write-Host "‚úÖ getlifeundo.com –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
    Write-Host "‚úÖ lifeundo.ru —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    Write-Host "‚úÖ DNS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
    Write-Host "‚úÖ API endpoints –æ—Ç–≤–µ—á–∞—é—Ç" -ForegroundColor Green
} else {
    Write-Host "üî¥ –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:" -ForegroundColor Red
    foreach ($issue in $issues) {
        Write-Host "‚ùå $issue" -ForegroundColor Red
    }
}

Write-Host "`nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" -ForegroundColor Cyan
Write-Host "1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å DNS getlifeundo.com ‚Üí 76.76.21.21" -ForegroundColor White
Write-Host "2. –ü–µ—Ä–µ–≤—ã–ø—É—Å—Ç–∏—Ç—å SSL –≤ Vercel" -ForegroundColor White
Write-Host "3. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏: .\apply-migrations.ps1" -ForegroundColor White
Write-Host "4. –ó–∞–ø—É—Å—Ç–∏—Ç—å SMTP —Å–µ—Ä–≤–∏—Å—ã: npm run smtp:start" -ForegroundColor White
Write-Host "5. Check System Health: /admin/system-health" -ForegroundColor White

Write-Host "`nReady!" -ForegroundColor Green
